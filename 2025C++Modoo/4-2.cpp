#include <iostream>

void print(int num)
{
	std::cout << num << std::endl;
}

void print(double d_num)
{
	std::cout << d_num << std::endl;
}

int main()
{
	//----------------------------------------------------------------------------------------------------------------------------------------
	int a = 5;
	char c = 'x';
	double d = 123;

	print(a);
	print(c);		//char를 인자로 받는 print는 없으나 자신과 최대로 근접한 함수를 찾아가게 된다.
	print(d);
	//----------------------------------------------------------------------------------------------------------------------------------------

	return 0;
}

//	함수의 오버로딩 -> 함수의 이름이 같더라도 인자가 다르면 다른 함수라고 판단.
//	
//	함수 오버로딩 과정
// 
//	1. 자신과 타입이 일치하는 함수를 찾는다.
// 
//	2. 정확히 일치하는 타입이 없는 경우	형변환을 통해서 일치하는 함수를 찾아본다.
// 
//	3. 변환해도 일치하는 함수가 없다면 좀 더 포괄적인 형변환을 통해 일치하는 함수를 찾아본다.
// 
//	4. 유저 정의된 타입 변환으로 일치하는 것을 찾는다.
//		만약 컴파일러가 위 과정을 거치고 함수를 찾지 못하거나 같은 단계에서 두 개 이상이 일치하는 경우
//		모호하다 (ambiguous) 라고 판단해서 오류를 발생
//